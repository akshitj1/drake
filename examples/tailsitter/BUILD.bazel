# -*- python -*-
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_library",
)
load(
    "@drake//tools/vector_gen:vector_gen.bzl",
    "drake_cc_vector_gen_library",
)

package(
    default_visibility = [
        "//visibility:public",
    ],
)

drake_cc_library(
    name = "trajectory_optimizer",
    srcs = [],
    hdrs = ["trajectory_optimizer.h"],
    deps = [
        "//common/trajectories:piecewise_polynomial",
        "//solvers:solve",
        "//systems/trajectory_optimization:direct_collocation",
    ],
)

drake_cc_vector_gen_library(
    name = "tailsitter_vector_types",
    srcs = [
        "tailsitter_input_named_vector.yaml",
        "tailsitter_state_named_vector.yaml",
    ],
    visibility = ["//visibility:public"],
)

drake_cc_library(
    name = "common",
    srcs = [],
    hdrs = ["common.h"],
    deps = [
        "//common/trajectories:piecewise_polynomial",
    ],
)

drake_cc_library(
    name = "tailsitter_plant",
    srcs = ["tailsitter_plant.cc"],
    hdrs = ["tailsitter_plant.h"],
    deps = [
        ":common",
        ":tailsitter_vector_types",
        "//common:default_scalars",
        "//math:geometric_transform",
        "//systems/framework:leaf_system",
    ],
)

drake_cc_library(
    name = "tailsitter_geometry",
    srcs = [],
    hdrs = ["tailsitter_geometry.h"],
    deps = [
        ":tailsitter_plant",
        ":tailsitter_vector_types",
        "//geometry:geometry_roles",
        "//geometry:scene_graph",
        "//math:geometric_transform",
        "//systems/framework:diagram_builder",
        "//systems/framework:leaf_system",
    ],
)

drake_cc_library(
    name = "trajectory_generator",
    srcs = [],
    hdrs = ["trajectory_generator.h"],
    deps = [
        ":common",
        ":tailsitter_plant",
        ":trajectory_optimizer",
    ],
)

drake_cc_library(
    name = "tailsitter_controller",
    srcs = [],
    hdrs = ["tailsitter_controller.h"],
    deps = [
        ":common",
        ":tailsitter_plant",
        "//systems/controllers:finite_horizon_linear_quadratic_regulator",
    ],
)

drake_cc_library(
    name = "trajectory_funnel",
    srcs = ["trajectory_funnel.h"],
    deps = [
        "//common:default_scalars",
        "//common:essential",
        "//common/trajectories:piecewise_polynomial",
        "//math:quadratic_form",
        "//solvers:mathematical_program",
        "//solvers:solve",
        "//systems/controllers:finite_horizon_linear_quadratic_regulator",
        "//systems/framework:leaf_system",
        "//systems/primitives:linear_system",
    ],
)

drake_cc_binary(
    name = "perch_tailsitter",
    srcs = ["perch_tailsitter.cc"],
    deps = [
        ":tailsitter_controller",
        ":tailsitter_plant",
        ":trajectory_funnel",
        ":trajectory_generator",
        "//systems/analysis:simulator",
        "//systems/framework:diagram_builder",
        "@gflags",
    ],
)

drake_cc_library(
    name = "fixed_state_roa",
    srcs = ["fixed_state_roa.h"],
    deps = [
        "//common:default_scalars",
        "//common:essential",
        "//solvers:mathematical_program",
        "//solvers:solve",
        "//systems/controllers:linear_quadratic_regulator",
        "//systems/framework:leaf_system",
    ],
)

drake_cc_library(
    name = "plot_util",
    hdrs = ["plot_util.h"],
    deps = [
        "//common:essential",
        "@vtk//:vtkChartsCore",
        "@vtk//:vtkCommonCore",
        "@vtk//:vtkCommonDataModel",
        "@vtk//:vtkInteractionStyle",
        "@vtk//:vtkRenderingContext2D",
        "@vtk//:vtkRenderingContextOpenGL2",
        "@vtk//:vtkRenderingCore",
        "@vtk//:vtkRenderingFreeType",
        "@vtk//:vtkRenderingOpenGL2",
        "@vtk//:vtkViewsContext2D",
    ],
)

drake_cc_binary(
    name = "hover_tailsitter",
    srcs = ["hover_tailsitter.cc"],
    deps = [
        ":fixed_state_roa",
        ":plot_util",
        ":tailsitter_geometry",
        ":tailsitter_plant",
        "//common:is_approx_equal_abstol",
        "//geometry:geometry_visualization",
        "//systems/analysis:simulator",
        "//systems/controllers:linear_quadratic_regulator",
        "//systems/primitives:linear_system",
        "//systems/primitives:saturation",
        "//systems/primitives:signal_logger",
        "@gflags",
    ],
)

drake_cc_binary(
    name = "swing_up_pendulum",
    srcs = ["swing_up_pendulum.cc"],
    deps = [
        ":trajectory_funnel",
        ":trajectory_optimizer",
        "//common/trajectories:piecewise_polynomial",
        "//examples/pendulum:pendulum_plant",
        "//systems/analysis:simulator",
        "//systems/controllers:finite_horizon_linear_quadratic_regulator",
        "//systems/framework:diagram_builder",
        "@gflags",
    ],
)
